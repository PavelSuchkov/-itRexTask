{"version":3,"sources":["components/Paginator/Paginator.module.css","App.module.css","store/users-reducer.tsx","api/api.tsx","components/TableItem.tsx","components/SelectedUser.tsx","components/Paginator/Paginator.tsx","components/Table.tsx","App.tsx","reportWebVitals.ts","store/store.tsx","index.tsx"],"names":["module","exports","initialState","users","id","firstName","lastName","email","phone","adress","state","streetAddress","city","zip","description","queryString","searchResult","portion","listOfStates","displayList","pagination","pageNumber","pageSize","setUsersAC","type","requestUsers","dispatch","a","axios","get","then","res","data","catch","err","console","log","TableItem","React","memo","props","className","styles","tr","onClick","td","SelectedUser","style","textAlign","Paginator","currentPage","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","filter","p","map","selectedPage","Table","usersData","useSelector","statesList","useDispatch","isSearchWorks","setIsSearchWorks","setUsers","selectedUser","setSelectedUser","useEffect","sortedId","setSortedId","sortedName","setSortedName","sortedLastName","setSortedLastName","sortedEmail","setSortedEmail","sortedPhone","setSortedPhone","sortedState","setSortedState","searchString","setSearchString","placeholder","value","onChange","e","currentTarget","onChangeHandler","sortBySearchString","name","option","onSelectChangeHandler","s","table","item","index","foundedUser","find","u","clickHandler","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","sort","b","reverse","localeCompare","toLowerCase","indexOf","copyState","temp","stateList","str","includes","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4fabe60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1EBzc\",\"pageNumber\":\"Paginator_pageNumber__2CjBg\",\"selectedPage\":\"Paginator_selectedPage__p3Nej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3BC4R\",\"App-logo\":\"App_App-logo__QlHTE\",\"App-logo-spin\":\"App_App-logo-spin__sRvRD\",\"App-header\":\"App_App-header__7CUVn\",\"App-link\":\"App_App-link__1RbMT\"};","import {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"./store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {getUsers} from \"../api/api\";\r\n\r\nexport type UserType = {\r\n    id: number\r\n    firstName: string\r\n    lastName: string\r\n    email: string\r\n    phone: string\r\n    adress: {\r\n        state: string\r\n        streetAddress: string\r\n        city: string\r\n        zip: string\r\n        description: string\r\n    }\r\n};\r\n\r\n\r\nconst initialState = {\r\n    users: [{\r\n        id: 0,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        adress: {\r\n            state: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            zip: '',\r\n            description: '',\r\n        }\r\n    }],\r\n    queryString: '',\r\n    searchResult : [] as Array<UserType>,\r\n    portion: []  as Array<UserType>,\r\n    listOfStates: [] as Array<string>,\r\n    displayList: [] as Array<UserType>,\r\n    pagination : {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n    }\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n\r\n        case \"SET_USERS\":\r\n            return {...state, users: action.users}\r\n\r\n        case \"SORT_BY_ID\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.id - b.id))]}\r\n        case \"SORT_BY_ID_REVERSE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.id - b.id))].reverse()}\r\n\r\n        case \"SORT_BY_NAME\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.firstName.localeCompare(b.firstName)))]}\r\n        case \"SORT_BY_NAME_REVERSE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.firstName.localeCompare(b.firstName)))].reverse()}\r\n\r\n        case \"SORT_BY_LASTNAME\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.lastName.localeCompare(b.lastName)))]}\r\n        case \"SORT_BY_LASTNAME_REVERSE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.lastName.localeCompare(b.lastName)))].reverse()}\r\n\r\n        case \"SORT_BY_EMAIL\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.email.localeCompare(b.email)))]}\r\n        case \"SORT_BY_EMAIL_REVERSE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.email.localeCompare(b.email)))].reverse()}\r\n\r\n        case \"SORT_BY_PHONE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.phone.localeCompare(b.phone)))]}\r\n        case \"SORT_BY_PHONE_REVERSE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.phone.localeCompare(b.phone)))].reverse()}\r\n\r\n        case \"SORT_BY_STATE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.adress.state.localeCompare(b.adress.state)))]}\r\n        case \"SORT_BY_STATE_REVERSE\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.adress.state.localeCompare(b.adress.state)))].reverse()}\r\n        case \"SORT_BY_STATE_WITH_SELECT\":\r\n\r\n            return {...state, listOfStates: [...state.listOfStates], users: [...state.users.filter(u => u.adress.state === action.option)]}\r\n\r\n        case \"SORT_BY_SEARCH_STRING\":\r\n            if(action.searchString !== '') {\r\n                return {...state, searchResult: [...state.users.filter((u) => u.firstName.toLowerCase().indexOf(action.searchString) !== -1)]}\r\n            } else return {...state}\r\n\r\n        case \"LIST_OF_STATES_CREATED\":\r\n            let copyState = {...state}\r\n            let temp = [] as Array<string>\r\n            let stateList = copyState.displayList.map(u => u.adress.state)\r\n            for(let str of stateList) {\r\n                if (!temp.includes(str)){\r\n                    temp.push(str)\r\n                }\r\n            }\r\n            return {...copyState, listOfStates: temp}\r\n\r\n        case \"DISPLAY_LIST\":\r\n            return {...state, displayList: [...state.users.map((u )=> {\r\n                  return  u\r\n                })]}\r\n\r\n\r\n        case \"RESET_SEARCH\":\r\n            return {...state, users: [...state.users.sort((a, b) => (a.adress.state.localeCompare(b.adress.state)))].reverse()}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setUsersAC>\r\n                  | ReturnType<typeof sortByID>\r\n                  | ReturnType<typeof sortByName>\r\n                  | ReturnType<typeof sortByLastName>\r\n                  | ReturnType<typeof sortByEmail>\r\n                  | ReturnType<typeof sortByPhone>\r\n                  | ReturnType<typeof sortByState>\r\n                  | ReturnType<typeof setUsersACReverse>\r\n                  | ReturnType<typeof sortByEmailReverse>\r\n                  | ReturnType<typeof sortByIDReverse>\r\n                  | ReturnType<typeof sortByNameReverse>\r\n                  | ReturnType<typeof sortByLastNameReverse>\r\n                  | ReturnType<typeof sortByPhoneReverse>\r\n                  | ReturnType<typeof sortByStateReverse>\r\n                  | ReturnType<typeof sortByStateWithSelect>\r\n                  | ReturnType<typeof sortBySearchString>\r\n                  | ReturnType<typeof resetSearch>\r\n                  | ReturnType<typeof listOfStatesCreated>\r\n                  | ReturnType<typeof onPageChanged>\r\n                  | ReturnType<typeof displayListCreated>\r\n\r\nexport type ThunkType = ThunkAction<Promise<void>, RootStateType, unknown, ActionsType>\r\n\r\nexport const setUsersAC = (users: any) => {\r\n    return {\r\n        type: \"SET_USERS\",\r\n        users\r\n    } as const\r\n}\r\nexport const setUsersACReverse = (users: any) => {\r\n    return {\r\n        type: \"SET_USERS\",\r\n        users\r\n    } as const\r\n}\r\nexport const sortByID = () => {\r\n    return {\r\n        type: \"SORT_BY_ID\"\r\n    } as const\r\n}\r\nexport const sortByIDReverse = () => {\r\n    return {\r\n        type: \"SORT_BY_ID_REVERSE\"\r\n    } as const\r\n}\r\nexport const sortByName = () => {\r\n    return {\r\n        type: \"SORT_BY_NAME\"\r\n    } as const\r\n}\r\nexport const sortByNameReverse = () => {\r\n    return {\r\n        type: \"SORT_BY_NAME_REVERSE\"\r\n    } as const\r\n}\r\nexport const sortByLastName = () => {\r\n    return {\r\n        type: \"SORT_BY_LASTNAME\"\r\n    } as const\r\n}\r\nexport const sortByLastNameReverse = () => {\r\n    return {\r\n        type: \"SORT_BY_LASTNAME_REVERSE\"\r\n    } as const\r\n}\r\nexport const sortByEmail = () => {\r\n    return {\r\n        type: \"SORT_BY_EMAIL\"\r\n    } as const\r\n}\r\nexport const sortByEmailReverse = () => {\r\n    return {\r\n        type: \"SORT_BY_EMAIL_REVERSE\"\r\n    } as const\r\n}\r\nexport const sortByPhone = () => {\r\n    return {\r\n        type: \"SORT_BY_PHONE\"\r\n    } as const\r\n}\r\nexport const sortByPhoneReverse = () => {\r\n    return {\r\n        type: \"SORT_BY_PHONE_REVERSE\"\r\n    } as const\r\n}\r\nexport const sortByState = () => {\r\n    return {\r\n        type: \"SORT_BY_STATE\"\r\n    } as const\r\n}\r\nexport const sortByStateReverse = () => {\r\n    return {\r\n        type: \"SORT_BY_STATE_REVERSE\"\r\n    } as const\r\n}\r\nexport const sortByStateWithSelect = (option: string) => {\r\n    return {\r\n        type: \"SORT_BY_STATE_WITH_SELECT\",\r\n        option\r\n    } as const\r\n}\r\nexport const sortBySearchString = (searchString: string) => {\r\n    return {\r\n        type: \"SORT_BY_SEARCH_STRING\",\r\n        searchString\r\n    } as const\r\n}\r\nexport const resetSearch = () => {\r\n    return {\r\n        type: \"RESET_SEARCH\",\r\n    } as const\r\n}\r\n\r\nexport const listOfStatesCreated = () => {\r\n    return {\r\n        type: \"LIST_OF_STATES_CREATED\",\r\n    } as const\r\n}\r\n\r\nexport const onPageChanged = (pageNumber: number) => {\r\n    return {\r\n        type: \"ON_PAGE_CHANGED\"\r\n    } as const\r\n}\r\n\r\nexport const displayListCreated = () => {\r\n    return {\r\n        type: \"DISPLAY_LIST\"\r\n    } as const\r\n}\r\n\r\n\r\n//Thunks\r\nexport const requestUsers = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const users = await getUsers();\r\n        dispatch(setUsersAC(users))\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport {UserType} from \"../store/users-reducer\";\r\n\r\n\r\nexport const getUsers = () =>  {\r\n        return axios.get<Array<UserType>>(`http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&adress=%7BaddressObject%7D&description=%7Blorem%7C32`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n","import {UserType} from \"../store/users-reducer\";\r\nimport React from \"react\";\r\nimport styles from '../App.module.css'\r\n\r\ntype TableItemPropsType = {\r\n    id: number\r\n    firstName: string\r\n    lastName: string\r\n    email: string\r\n    phone: string\r\n    state: string\r\n    isSelected?: boolean\r\n    onClick: ( ) => void\r\n}\r\n\r\nexport const TableItem = React.memo((props: TableItemPropsType) => {\r\n\r\n    return (\r\n        <tr className={styles.tr} onClick={props.onClick}>\r\n            <td className={styles.td}>{props.id}</td>\r\n            <td className={styles.td}>{props.firstName}</td>\r\n            <td className={styles.td}>{props.lastName}</td>\r\n            <td className={styles.td}>{props.email}</td>\r\n            <td className={styles.td}>{props.phone}</td>\r\n            <td className={styles.td}>{props.state}</td>\r\n            <br/>\r\n        </tr>\r\n    )\r\n})","\r\ntype SelectedUserPropsType = {\r\n    firstName: string\r\n    lastName: string\r\n    adress: {\r\n        description: string\r\n        city: string\r\n        state: string\r\n        zip: string\r\n        streetAddress: string\r\n    }\r\n}\r\nexport const SelectedUser = (props: SelectedUserPropsType) => {\r\n    return <div style={{textAlign: 'center'}}>\r\n        <div>Profile Info:</div>\r\n        <div>Selected profile: <b>{props.firstName + ' ' + props.lastName}</b></div>\r\n        <div>Description: <b>{props.adress.description}</b></div>\r\n        <div>Address: <b>{props.adress.streetAddress}</b></div>\r\n        <div>City: <b>{props.adress.city}</b></div>\r\n        <div>State: <b>{props.adress.state}</b></div>\r\n        <div>Index: <b>{props.adress.zip}</b></div>\r\n    </div>\r\n}","import React, {FC, useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\ntype UsersPageType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: FC<UsersPageType> = ({currentPage,\r\n                                                 pageSize,\r\n                                                 totalItemsCount,\r\n                                                 onPageChanged,\r\n                                                 portionSize= 20}) => {\r\n\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState<number>(1);\r\n    const leftPortionNumber = (portionNumber -1) * portionSize + 1;\r\n    const rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber -1 )} }>prev</button> }\r\n        {pages\r\n            .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n            .map((p) => {\r\n                return <span key={p} className={(currentPage === p) ? styles.selectedPage : styles.pageNumber}\r\n                             onClick={() => {onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => setPortionNumber(portionNumber + 1) }>next</button>}\r\n    </div>\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {\r\n    displayListCreated,\r\n    listOfStatesCreated,\r\n    requestUsers,\r\n    sortByEmail,\r\n    sortByEmailReverse,\r\n    sortByID,\r\n    sortByIDReverse,\r\n    sortByLastName,\r\n    sortByLastNameReverse,\r\n    sortByName,\r\n    sortByNameReverse,\r\n    sortByPhone,\r\n    sortByPhoneReverse,\r\n    sortBySearchString,\r\n    sortByState,\r\n    sortByStateReverse,\r\n    sortByStateWithSelect,\r\n    UserType\r\n} from \"../store/users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../store/store\";\r\nimport {TableItem} from \"./TableItem\";\r\nimport {TableHeader} from \"./TableHeader\";\r\nimport {SelectedUser} from \"./SelectedUser\";\r\nimport styles from '../App.module.css'\r\nimport {Paginator} from \"./Paginator/Paginator\";\r\n// import {v1} from \"uuid\"\r\nimport './Table.css';\r\n\r\n\r\nexport const Table = () => {\r\n\r\n    const usersData = useSelector<RootStateType, Array<UserType>>(state => state.users.users);\r\n    const searchResult = useSelector<RootStateType, Array<UserType>>(state => state.users.searchResult);\r\n    const statesList = useSelector<RootStateType, Array<string>>(state => state.users.listOfStates);\r\n    const displayList = useSelector<RootStateType, Array<UserType>>(state => state.users.displayList);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isSearchWorks, setIsSearchWorks] = useState(false);\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n    const [selectedUser, setSelectedUser] = useState<UserType | null>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers());\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setUsers(usersData);\r\n        dispatch(displayListCreated());\r\n        dispatch(listOfStatesCreated());\r\n    }, [usersData])\r\n\r\n    useEffect(() => {\r\n        if (isSearchWorks) {\r\n            setUsers(searchResult)\r\n        } else {\r\n            setUsers(usersData)\r\n        }\r\n    }, [searchResult, isSearchWorks])\r\n\r\n\r\n    const clickHandler = (id: number) => {\r\n        let foundedUser = users.find(u => u.id === id);\r\n        if (foundedUser) {\r\n            setSelectedUser(foundedUser);\r\n        }\r\n    }\r\n\r\n    const [sortedId, setSortedId] = useState(false);\r\n    const idSort = () => {\r\n        if (sortedId) {\r\n            dispatch(sortByIDReverse());\r\n            setSortedId(false);\r\n        } else {\r\n            dispatch(sortByID());\r\n            setSortedId(true);\r\n        }\r\n    }\r\n\r\n    const [sortedName, setSortedName] = useState(false);\r\n    const nameSort = () => {\r\n        if (sortedName) {\r\n            dispatch(sortByNameReverse());\r\n            setSortedName(false);\r\n        } else {\r\n            dispatch(sortByName());\r\n            setSortedName(true);\r\n        }\r\n    }\r\n    const [sortedLastName, setSortedLastName] = useState(false);\r\n    const lastNameSort = () => {\r\n        if (sortedLastName) {\r\n            dispatch(sortByLastNameReverse());\r\n            setSortedLastName(false)\r\n        } else {\r\n            dispatch(sortByLastName());\r\n            setSortedLastName(true)\r\n        }\r\n\r\n    }\r\n    const [sortedEmail, setSortedEmail] = useState(false);\r\n    const emailSort = () => {\r\n        if (sortedEmail) {\r\n            dispatch(sortByEmailReverse());\r\n            setSortedEmail(false)\r\n        } else {\r\n            dispatch(sortByEmail());\r\n            setSortedEmail(true)\r\n        }\r\n    }\r\n\r\n    const [sortedPhone, setSortedPhone] = useState(false);\r\n    const phoneSort = () => {\r\n        if (sortedPhone) {\r\n            dispatch(sortByPhoneReverse());\r\n            setSortedPhone(false);\r\n        } else {\r\n            dispatch(sortByPhone());\r\n            setSortedPhone(true);\r\n        }\r\n    }\r\n    const [sortedState, setSortedState] = useState(false);\r\n    const stateSort = () => {\r\n        if (sortedState) {\r\n            dispatch(sortByStateReverse());\r\n            setSortedState(false);\r\n        } else {\r\n            dispatch(sortByState());\r\n            setSortedState(true)\r\n        }\r\n    }\r\n\r\n    const [searchString, setSearchString] = useState('');\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchString(e.currentTarget.value)\r\n    }\r\n    const searchButtonClick = () => {\r\n        if (searchString === '') {\r\n            dispatch(requestUsers())\r\n        } else {\r\n            dispatch(sortBySearchString(searchString))\r\n            setIsSearchWorks(true)\r\n        }\r\n    }\r\n\r\n    const resetSearchButtonClick = () => {\r\n        setIsSearchWorks(false);\r\n        setSearchString('')\r\n    }\r\n\r\n\r\n    const onSelectChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n\r\n        dispatch(sortByStateWithSelect(e.currentTarget.value));\r\n        setSelectedUser(null);\r\n    }\r\n    const onPageChanged = (pageNumber: number) => {\r\n        console.log('123')\r\n    }\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className=\"topBlock\">\r\n                <div className=\"search\">\r\n                    <input className=\"input\" type=\"text\" placeholder={'Search by name'} value={searchString}\r\n                        onChange={(e) => onChangeHandler(e)} />\r\n                    <button className=\"btnByInput\" onClick={searchButtonClick}>Search</button>\r\n                    <button className=\"btnByInput\" onClick={resetSearchButtonClick}>Reset Search</button>\r\n                </div>\r\n\r\n                <select name=\"states\" onChange={(e) => { onSelectChangeHandler(e) }} >\r\n                    <option value={'select the state'} >select the state</option>\r\n                    {statesList.map(s => {\r\n                        return <option id={s} value={s}>{s}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <table className={styles.table}>\r\n                <tr>\r\n                    <th><button className=\"btn\" onClick={idSort}>sort by ID</button></th>\r\n                    <th><button className=\"btn\" onClick={nameSort}>sort by Name</button></th>\r\n                    <th><button className=\"btn\" onClick={lastNameSort}>sort by LasName</button></th>\r\n                    <th><button className=\"btn\" onClick={emailSort}>sort by Email</button></th>\r\n                    <th><button className=\"btn\" onClick={phoneSort}>sort by Phone</button></th>\r\n                    <th><button className=\"btn\" onClick={stateSort}>sort by State</button></th>\r\n                </tr>\r\n\r\n                {\r\n                    users.map((item, index) => {\r\n                        return <TableItem key={index}\r\n                            email={item.email}\r\n                            id={item.id}\r\n                            state={item.adress.state}\r\n                            firstName={item.firstName}\r\n                            lastName={item.lastName}\r\n                            phone={item.phone}\r\n                            onClick={() => clickHandler(item.id)}\r\n                        />\r\n                    })}\r\n                {/* <Paginator totalItemsCount={32} pageSize={20} currentPage={1} onPageChanged={onPageChanged} /> */}\r\n                {!!selectedUser && <SelectedUser\r\n                    firstName={selectedUser.firstName}\r\n                    lastName={selectedUser.lastName}\r\n                    adress={selectedUser.adress} />}\r\n            </table>\r\n            <Paginator totalItemsCount={32} pageSize={20} currentPage={1} onPageChanged={onPageChanged} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.module.css';\nimport {Table} from \"./components/Table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\n\r\nconst reducers = combineReducers({\r\n    users: usersReducer\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}